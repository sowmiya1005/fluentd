apiVersion: v1
kind: ConfigMap
metadata:
  name: idbi-apim-mws-config
  namespace: nsp-idbi-apim-uat
data:
  DB_TYPE: oracle
  DB_URL: "jdbc:wm:oracle://dcoradbnpscan.idbibank.com:15210;ServiceName=APIMUATSRV"
  mws.db.xml: |
    <?xml version="1.0" encoding="UTF-8" standalone="no"?><CONFIG>
        <CONNECTION default="true" displayname="Default" id="1" name="default" type="oracle">
            <SQLWORKERCLASS>com.webmethods.portal.service.sql.core.BaseSqlWorker</SQLWORKERCLASS>
            <CONNPROVIDERCLASS>com.webmethods.portal.service.sql.core.provider.pool.PooledConnectionProvider</CONNPROVIDERCLASS>
            <PARAMS>
                <DRIVER>com.wm.dd.jdbc.oracle.OracleDriver</DRIVER>
                <URL>jdbc:wm:oracle://dcoradbnpscan.idbibank.com:15210;ServiceName=APIMUATSRV</URL>
                <USER>mwsuat</USER>
                            <!-- Password could be specified in clear text, it will be automatically encrypted during MWS startup -->
                <PASSWORD>{AES}2txKs7gKqS5e4YKVYRyCFA==</PASSWORD>
                <CACHESTATEMENTS>false</CACHESTATEMENTS>
                <TESTSQL>SELECT COUNT(*) FROM TBLTHING WHERE IDTHING = 1</TESTSQL>
                <MAXCONNECTIONS>100</MAXCONNECTIONS>
                <MINCONNECTIONS>0</MINCONNECTIONS>
                <!-- Max amount of idle time (in seconds) of the objects pooled by this pool -->
                <IDLETIMEOUT>60</IDLETIMEOUT>
                <!-- Time (in seconds) between eviction runs -->
                <CLEANUPPERIOD>10</CLEANUPPERIOD>
            </PARAMS>
        </CONNECTION>
    </CONFIG>

  jetty.xml: |
    <?xml version="1.0"?>
    <!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure_9_3.dtd">

    <!-- =============================================================== -->
    <!-- Documentation of this file format can be found at:              -->
    <!-- http://wiki.eclipse.org/Jetty/Reference/jetty.xml_syntax        -->
    <!-- =============================================================== -->
    <Configure id="Server" class="org.eclipse.jetty.server.Server">

        <!-- =========================================================== -->
        <!-- Configure the Server Thread Pool.                           -->
        <!-- The server holds a common thread pool which is used by      -->
        <!-- default as the executor used by all connectors and servlet  -->
        <!-- dispatches.                                                 -->
        <!--                                                             -->
        <!-- Configuring a fixed thread pool is vital to controlling the -->
        <!-- maximal memory footprint of the server and is a key tuning  -->
        <!-- parameter for tuning.  In an application that rarely blocks -->
        <!-- then maximal threads may be close to the number of 5*CPUs.  -->
        <!-- In an application that frequently blocks, then maximal      -->
        <!-- threads should be set as high as possible given the memory  -->
        <!-- available.                                                  -->
        <!--                                                             -->
        <!-- Consult the javadoc of o.e.j.util.thread.QueuedThreadPool   -->
        <!-- for all configuration that may be set here.                 -->
        <!-- =========================================================== -->
        <!-- uncomment to change type of threadpool
        <Arg name="threadpool"><New id="threadpool" class="org.eclipse.jetty.util.thread.QueuedThreadPool"/></Arg>
        -->
        <Get name="ThreadPool">
          <Set name="minThreads" type="int"><SystemProperty name="portal.http.minthreads" default="10"/></Set>
          <Set name="maxThreads" type="int"><SystemProperty name="portal.http.maxthreads" default="200"/></Set>
          <Set name="idleTimeout" type="int"><Property name="threads.timeout" default="60000"/></Set>
          <Set name="detailedDump">false</Set>
        </Get>

        <!-- =========================================================== -->
        <!-- Add shared Scheduler instance                               -->
        <!-- =========================================================== -->
        <Call name="addBean">
          <Arg>
            <New class="org.eclipse.jetty.util.thread.ScheduledExecutorScheduler"/>
          </Arg>
        </Call>

        <!-- =============================================================== -->
        <!-- Mixin the Low Resources Monitor                                 -->
        <!-- =============================================================== -->
        <Call name="addBean">
          <Arg>
            <New class="org.eclipse.jetty.server.LowResourceMonitor">
              <Arg name="server"><Ref refid='Server'/></Arg>
              <Set name="period"><Property name="lowresources.period" default="1000"/></Set>
              <Set name="lowResourcesIdleTimeout"><Property name="lowresources.lowResourcesIdleTimeout" default="200"/></Set>
              <Set name="monitorThreads"><Property name="lowresources.monitorThreads" default="true"/></Set>
              <Set name="maxConnections"><Property name="lowresources.maxConnections" default="0"/></Set>
              <Set name="maxMemory"><Property name="lowresources.maxMemory" default="0"/></Set>
              <Set name="maxLowResourcesTime"><Property name="lowresources.maxLowResourcesTime" default="5000"/></Set>
            </New>
          </Arg>
        </Call>

        <!-- =========================================================== -->
        <!-- Http Configuration.                                         -->
        <!-- This is a common configuration instance used by all         -->
        <!-- connectors that can carry HTTP semantics (HTTP, HTTPS, SPDY)-->
        <!-- It configures the non wire protocol aspects of the HTTP     -->
        <!-- semantic.                                                   -->
        <!--                                                             -->
        <!-- This configuration is only defined here and is used by      -->
        <!-- reference from the configuration which instantiate the      -->
        <!-- connectors.                                                 -->
        <!--                                                             -->
        <!-- Consult the javadoc of o.e.j.server.HttpConfiguration       -->
        <!-- for all configuration that may be set here.                 -->
        <!-- =========================================================== -->
        <New id="httpConfig" class="org.eclipse.jetty.server.HttpConfiguration">
          <Set name="secureScheme">https</Set>
          <Set name="securePort"><SystemProperty name="portal.https.port" default="8443"/></Set>
          <Set name="outputBufferSize"><Property name="jetty.output.buffer.size" default="32768" /></Set>
          <Set name="requestHeaderSize"><Property name="jetty.request.header.size" default="8192" /></Set>
          <Set name="responseHeaderSize"><Property name="jetty.response.header.size" default="8192" /></Set>
          <Set name="sendServerVersion"><Property name="jetty.send.server.version" default="false" /></Set>
          <Set name="sendDateHeader"><Property name="jetty.send.date.header" default="false" /></Set>
          <Set name="headerCacheSize">512</Set>
          <!-- Uncomment to enable handling of X-Forwarded- style headers
          <Call name="addCustomizer">
            <Arg><New class="org.eclipse.jetty.server.ForwardedRequestCustomizer"/></Arg>
          </Call>
          -->
        </New>

        <!-- ============================================================= -->
        <!-- Configure a TLS (SSL) Context Factory                         -->
        <!-- ============================================================= -->
        <New id="sslContextFactory" class="org.eclipse.jetty.util.ssl.SslContextFactory$Server">
          <Set name="KeyStorePath"><SystemProperty name="jetty.keyStore" /></Set>
          <Set name="KeyStorePassword"><SystemProperty name="jetty.keyStorePassword" /></Set>
          <Set name="KeyStoreType"><SystemProperty name="jetty.keyStoreType" /></Set>
          <Set name="TrustStorePath"><SystemProperty name="jetty.trustStore" /></Set>
          <Set name="TrustStorePassword"><SystemProperty name="jetty.trustStorePassword" /></Set>
          <Set name="TrustStoreType"><SystemProperty name="jetty.trustStoreType" /></Set>
          <Set name="EndpointIdentificationAlgorithm"></Set>
          <Set name="NeedClientAuth"><Property name="jetty.ssl.needClientAuth" default="false"/></Set>
          <Set name="WantClientAuth"><Property name="jetty.ssl.wantClientAuth" default="false"/></Set>
          <Set name="ExcludeCipherSuites">
            <Array type="String">
              <Item>SSL_RSA_WITH_DES_CBC_SHA</Item>
              <Item>SSL_DHE_RSA_WITH_DES_CBC_SHA</Item>
              <Item>SSL_DHE_DSS_WITH_DES_CBC_SHA</Item>
              <Item>SSL_RSA_EXPORT_WITH_RC4_40_MD5</Item>
              <Item>SSL_RSA_EXPORT_WITH_DES40_CBC_SHA</Item>
              <Item>SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA</Item>
              <Item>SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA</Item>
            </Array>
          </Set>
          <Set name="ExcludeProtocols">
            <Array type="java.lang.String">
              <Item>SSLv3</Item>
            </Array>
          </Set>
        </New>

        <!-- =========================================================== -->
        <!-- Create a TLS specific HttpConfiguration based on the        -->
        <!-- common HttpConfiguration                                    -->
        <!-- Add a SecureRequestCustomizer to extract certificate and    -->
        <!-- session information                                         -->
        <!-- =========================================================== -->
        <New id="sslHttpConfig" class="org.eclipse.jetty.server.HttpConfiguration">
          <Arg><Ref refid="httpConfig"/></Arg>
          <Call name="addCustomizer">
            <Arg><New class="org.eclipse.jetty.server.SecureRequestCustomizer"/></Arg>
          </Call>
        </New>


        <!-- =========================================================== -->
        <!-- Set connectors                                              -->
        <!-- =========================================================== -->

        <!-- =========================================================== -->
        <!-- Add a HTTP Connector.                                       -->
        <!-- Configure an o.e.j.server.ServerConnector with a single     -->
        <!-- HttpConnectionFactory instance using the common httpConfig  -->
        <!-- instance.                               -->
        <!--                                                             -->
        <!-- Consult the javadoc of o.e.j.server.ServerConnector and     -->
        <!-- o.e.j.server.HttpConnectionFactory for all configuration    -->
        <!-- that may be set here.                                       -->
        <!-- =========================================================== -->
        <Call id="httpConnector" name="addConnector">
          <Arg>
            <New class="org.eclipse.jetty.server.ServerConnector">
              <Arg name="server"><Ref refid="Server" /></Arg>
              <Arg name="acceptors" type="int"><Property name="http.acceptors" default="-1"/></Arg>
              <Arg name="selectors" type="int"><Property name="http.selectors" default="-1"/></Arg>
              <Arg name="factories">
                <Array type="org.eclipse.jetty.server.ConnectionFactory">
                  <Item>
                    <New class="org.eclipse.jetty.server.HttpConnectionFactory">
                      <Arg name="config"><Ref refid="httpConfig" /></Arg>
                    </New>
                  </Item>
                </Array>
              </Arg>
              <Set name="host"><Property name="jetty.host" /></Set>
              <Set name="port"><SystemProperty name="portal.http.port" default="8585"/></Set>
              <Set name="idleTimeout"><Property name="http.timeout" default="30000"/></Set>
              <Set name="soLingerTime"><Property name="http.soLingerTime" default="-1"/></Set>
              <Set name="acceptorPriorityDelta"><Property name="http.acceptorPriorityDelta" default="0"/></Set>
            </New>
          </Arg>
        </Call>

        <!-- =========================================================== -->
        <!-- Add a HTTPS Connector.                                      -->
        <!-- Configure an o.e.j.server.ServerConnector with connection   -->
        <!-- factories for TLS (aka SSL) and HTTP to provide HTTPS.      -->
        <!-- All accepted TLS connections are wired to a HTTP connection.-->
        <!--                                                             -->
        <!-- Consult the javadoc of o.e.j.server.ServerConnector,        -->
        <!-- o.e.j.server.SslConnectionFactory and                       -->
        <!-- o.e.j.server.HttpConnectionFactory for all configuration    -->
        <!-- that may be set here.                                       -->
        <!-- =========================================================== -->
        <Call id="httpsConnector" name="addConnector">
          <Arg>
            <New class="org.eclipse.jetty.server.ServerConnector">
              <Arg name="server"><Ref refid="Server" /></Arg>
              <Arg name="acceptors" type="int"><Property name="ssl.acceptors" default="-1"/></Arg>
              <Arg name="selectors" type="int"><Property name="ssl.selectors" default="-1"/></Arg>
              <Arg name="factories">
                <Array type="org.eclipse.jetty.server.ConnectionFactory">
                  <Item>
                    <New class="org.eclipse.jetty.server.SslConnectionFactory">
                      <Arg name="next">http/1.1</Arg>
                      <Arg name="sslContextFactory"><Ref refid="sslContextFactory"/></Arg>
                    </New>
                  </Item>
                  <Item>
                    <New class="org.eclipse.jetty.server.HttpConnectionFactory">
                      <Arg name="config"><Ref refid="sslHttpConfig"/></Arg>
                    </New>
                  </Item>
                </Array>
              </Arg>
              <Set name="host"><Property name="jetty.host" /></Set>
              <Set name="port"><SystemProperty name="portal.https.port" default="8443"/></Set>
              <Set name="idleTimeout"><Property name="https.timeout" default="30000"/></Set>
              <Set name="soLingerTime"><Property name="https.soLingerTime" default="-1"/></Set>
              <Set name="acceptorPriorityDelta"><Property name="ssl.acceptorPriorityDelta" default="0"/></Set>
            </New>
          </Arg>
        </Call>


        <!-- =========================================================== -->
        <!-- Set the default handler structure for the Server            -->
        <!-- A handler collection is used to pass received requests to   -->
        <!-- both the ContextHandlerCollection, which selects the next   -->
        <!-- handler by context path and virtual host, and the           -->
        <!-- DefaultHandler, which handles any requests not handled by   -->
        <!-- the context handlers.                                       -->
        <!-- Other handlers may be added to the "Handlers" collection,   -->
        <!-- for example the jetty-requestlog.xml file adds the          -->
        <!-- RequestLogHandler after the default handler                 -->
        <!-- =========================================================== -->
        <Set name="handler">
          <New id="Handlers" class="org.eclipse.jetty.server.handler.HandlerCollection">
            <Set name="handlers">
            <Array type="org.eclipse.jetty.server.Handler">
              <Item>
                <New id="Contexts" class="org.eclipse.jetty.server.handler.ContextHandlerCollection"/>
              </Item>
              <Item>
                <New id="DefaultHandler" class="org.eclipse.jetty.server.handler.DefaultHandler">
                    <!-- information disclosure protection: don't display details about the available contexts when there is nothing mounted at the root -->
                    <Set name="showContexts">false</Set>
                </New>
              </Item>
            </Array>
            </Set>
          </New>
        </Set>

        <!-- =========================================================== -->
        <!-- Configure Request Log                                       -->
        <!-- =========================================================== -->
        <!--
        <Ref refid="Handlers">
          <Call name="addHandler">
            <Arg>
              <New id="RequestLog" class="org.eclipse.jetty.server.handler.RequestLogHandler">
                <Set name="requestLog">
                  <New id="RequestLogImpl" class="org.eclipse.jetty.server.AsyncNCSARequestLog">
                    <Set name="filename"><Call name="concat" class="com.webmethods.rtl.util.StringTools"><Arg><SystemProperty name="log4j.logging.dir" default
    ="." /></Arg><Arg><Property name="requestlog.filename" default="yyyy_mm_dd.request.log"/></Arg></Call></Set>
                    <Set name="filenameDateFormat"><Property name="requestlog.filenameDateFormat" default="yyyy_MM_dd"/></Set>
                    <Set name="retainDays"><Property name="requestlog.retain" default="90"/></Set>
                    <Set name="append"><Property name="requestlog.append" default="false"/></Set>
                    <Set name="extended"><Property name="requestlog.extended" default="false"/></Set>
                    <Set name="logCookies"><Property name="requestlog.cookies" default="false"/></Set>
                    <Set name="LogTimeZone"><Property name="requestlog.timezone" default="GMT"/></Set>
                  </New>
                </Set>
              </New>
            </Arg>
          </Call>
        </Ref>
        -->

        <!-- =========================================================== -->
        <!-- MWS LoginService                                            -->
        <!-- =========================================================== -->
        <Call name="addBean">
          <Arg>
            <New class="com.webmethods.portal.webapp.jetty7.MwsLoginService">
              <Set name="name">MwsRealm</Set>
            </New>
          </Arg>
        </Call>
        <Call name="addBean">
          <Arg>
            <New class="com.webmethods.portal.webapp.jetty7.MwsLoginService">
              <Set name="name">default</Set>
            </New>
          </Arg>
        </Call>

        <!-- =========================================================== -->
        <!-- portal.war deployer                                         -->
        <!-- =========================================================== -->
        <Call name="addBean">
          <Arg>
            <New class="com.webmethods.portal.webapp.jetty7.MwsDeployer">
              <Set name="contexts"><Ref id="Contexts"/></Set>
              <Set name="filesystemPath">deploy:/portal.war</Set>
            </New>
          </Arg>
        </Call>

        <!-- =========================================================== -->
        <!-- Configure the deployment manager                            -->
        <!-- =========================================================== -->
        <Call name="addBean">
          <Arg>
            <New id="DeploymentManager" class="org.eclipse.jetty.deploy.DeploymentManager">
              <Set name="contexts">
                <Ref id="Contexts" />
              </Set>
              <Call name="setContextAttribute">
                <Arg>org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern</Arg>
                <Arg>.*/jsp-api-[^/]*\.jar$|.*/jsp-[^/]*\.jar$</Arg>
              </Call>
            </New>
          </Arg>
        </Call>

        <!-- =========================================================== -->
        <!-- extra server options                                        -->
        <!-- =========================================================== -->
        <Set name="stopAtShutdown">false</Set>
        <Set name="stopTimeout">5000</Set>
        <Set name="dumpAfterStart"><Property name="jetty.dump.start" default="false"/></Set>
        <Set name="dumpBeforeStop"><Property name="jetty.dump.stop" default="false"/></Set>

        <!-- =========================================================== -->
        <!-- jetty-jndi by default                                       -->
        <!-- =========================================================== -->
        <Call class="java.lang.System" name="setProperty">
          <Arg>java.naming.factory.initial</Arg>
          <Arg><Property name="java.naming.factory.initial" default="org.eclipse.jetty.jndi.InitialContextFactory"/></Arg>
        </Call>
        <Call class="java.lang.System" name="setProperty">
          <Arg>java.naming.factory.url.pkgs</Arg>
          <Arg><Property name="java.naming.factory.url.pkgs" default="org.eclipse.jetty.jndi"/></Arg>
        </Call>

    </Configure>

  cluster.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <Cluster clusterId="1367262828" container="true" frontEndSecurePort="8585" frontEndUrl="https://idbi-apim-mws-svc-h.nsp-idbi-apim-uat.svc.cluster.local:8585">
      <!-- lists all physical servers in the cluster -->
      <Category name="servers">
        <Component class="com.webmethods.portal.system.cluster.impl.Server" enabled="true" name="idbi-apim-mws-0-node25684" nodeType="MWS">
          <Properties host="idbi-apim-mws-0.idbi-apim-mws-svc-h.nsp-idbi-apim-uat.svc.cluster.local" name="http" port="0"/>
          <Properties host="idbi-apim-mws-0.idbi-apim-mws-svc-h.nsp-idbi-apim-uat.svc.cluster.local" name="https" port="8585"/>
          <Role name="autodeploy"/>
          <Role name="search"/>
          <Role name="taskengine"/>
          <Role name="notification"/>
        </Component>
      </Category>
    </Cluster>

  custom_wrapper.conf: |
    #encoding=UTF-8

    #********************************************************************
    # Application Paths
    #********************************************************************
    # Application Paths
    set.SERVER_NAME=default
    set.NODE_NAME=idbi-apim-mws-0-node25684
    set.SERVER_HOME=/data/softwareag/mws/MWS/server/default
    set.PORTAL_HOME=%SERVER_HOME%/../..
    set.WM_HOME=%PORTAL_HOME%/..
    #set.JAVA_HOME=${wrapper.java.home}
    set.FILE_ENCODING=UTF-8

    # SSL Properties
    set.JAVA_KEYSTORE=%SERVER_HOME%/config/security/keystore.jks
    set.JAVA_KEYSTORETYPE=jks
    set.JAVA_KEYSTORE_PASSWORD={AES}KWbniYeILIJ4Cphs7Tdm91kTBR6t5rVRVLZ0cyiJ20U=
    set.JAVA_TRUSTSTORE=%SERVER_HOME%/config/security/truststore.jks
    set.JAVA_TRUSTSTORETYPE=jks
    set.JAVA_TRUSTSTORE_PASSWORD={AES}O1e2whkLOxlv+xDIMJZgBR/jpQWQJz0gfdRTe9QUnPE=
 

    # Minimum/Maximum Java Heap Size (in MB)
    wrapper.java.initmemory=1024
    wrapper.java.maxmemory=2048

    # Number of seconds to allow between two ping responses coming from the JVM (in sec)
    wrapper.ping.timeout=120

    # Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
    wrapper.java.additional.auto_bits=TRUE

    # Java Library Path
    wrapper.java.library.path.100=%JAVA_HOME%/bin
    wrapper.java.library.path.101=%SERVER_HOME%/bin
    wrapper.java.library.path.102=%WM_HOME%/common/bin

    # Java Additional Parameters
    wrapper.java.additional.100=-server
    wrapper.java.additional.102=-Djava.io.tmpdir="%SERVER_HOME%/temp"
    wrapper.java.additional.102.stripquotes=TRUE
    wrapper.java.additional.103=-Djava.awt.headless=true
    wrapper.java.additional.104=-Dfile.encoding=%FILE_ENCODING%

    wrapper.java.additional.200=-Dportal.home="%PORTAL_HOME%"
    wrapper.java.additional.200.stripquotes=TRUE
    wrapper.java.additional.201=-Dserver.name=%SERVER_NAME%
    wrapper.java.additional.202=-Dportal.node.name=%NODE_NAME%
    # specify the hostname or ip address that the JCR remoting listens on
    #  or leave empty to listen on all of them
    wrapper.java.additional.204=-Dmws.jcr.rmi.bind.address=

    wrapper.java.additional.301=-Djavax.net.ssl.trustStore="%JAVA_TRUSTSTORE%"
    wrapper.java.additional.301.stripquotes=TRUE
    wrapper.java.additional.302=-Djavax.net.ssl.keyStore="%JAVA_KEYSTORE%"
    wrapper.java.additional.302.stripquotes=TRUE
    wrapper.java.additional.303=-Djavax.net.ssl.trustStorePassword=%JAVA_TRUSTSTORE_PASSWORD%
    wrapper.java.additional.304=-Djavax.net.ssl.keyStorePassword=%JAVA_KEYSTORE_PASSWORD%
    wrapper.java.additional.305=-Djavax.net.ssl.keyStoreType=%JAVA_KEYSTORETYPE%
    wrapper.java.additional.306=-Djavax.net.ssl.trustStoreType=%JAVA_TRUSTSTORETYPE%
    wrapper.java.additional.306.stripquotes=TRUE
    wrapper.java.additional.307=-DLog4jContextSelector=org.apache.logging.log4j.core.selector.BasicContextSelector

    #NOTE: wrapper.java.additional.500 to 510 is reserved for debug configuration !
    #wrapper.java.additional.500=-Xdebug
    #wrapper.java.additional.501=-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=10033
    #wrapper.java.additional.502=-Dlog4j.default.log.level=DEBUG
    #wrapper.java.additional.503=-Ddebug=true
    #wrapper.java.additional.504=-Dframework.dev.mode=false


    #********************************************************************
    # Wrapper General Properties
    #********************************************************************
    # Allow for the use of non-contiguous numbered properties
    wrapper.ignore_sequence_gaps=TRUE

    # Title to use when running as a console
    wrapper.console.title=Software AG My webMethods Server (%SERVER_NAME%)

    # When set to TRUE causes the Wrapper to implicitly flush stdout after each line of output is sent to the console.
    #  For normal operation, this does not appear to be necessary. But users who are piping the console output of the Wrapper process
    #  into another application have reported that the console output was not being flushed in real time.
    wrapper.console.flush=TRUE

    #********************************************************************
    # Wrapper JVM Checks
    #********************************************************************
    # Detect DeadLocked Threads in the JVM. (Requires Standard Edition)
    wrapper.check.deadlock=FALSE
    wrapper.check.deadlock.interval=60
    wrapper.check.deadlock.action=RESTART
    wrapper.check.deadlock.output=FULL

    #********************************************************************
    # JVM Exit code handling
    #********************************************************************
    wrapper.on_exit.6=RESTART
    wrapper.jvm_exit.timeout=180

    # Out Of Memory detection.
    wrapper.filter.trigger.1000=java.lang.OutOfMemoryError
    wrapper.filter.action.1000=RESTART
    wrapper.filter.message.1000=The JVM has run out of memory.

    #********************************************************************
    # Wrapper Email Notifications. (Requires Professional Edition)
    #********************************************************************
    # Common Event Email settings.
    #wrapper.event.default.email.debug=TRUE
    #wrapper.event.default.email.smtp.host=<SMTP_Host>
    #wrapper.event.default.email.smtp.port=25
    #wrapper.event.default.email.subject=[%WRAPPER_HOSTNAME%:%WRAPPER_NAME%:%WRAPPER_EVENT_NAME%] Event Notification
    #wrapper.event.default.email.sender=<Sender email>
    #wrapper.event.default.email.recipient=<Recipient email>

    # Configure the log attached to event emails.
    #wrapper.event.default.email.attach_log=TRUE
    #wrapper.event.default.email.maillog.lines=50
    #wrapper.event.default.email.maillog.format=LPTM
    #wrapper.event.default.email.maillog.loglevel=INFO

    # Enable specific event emails.
    #wrapper.event.wrapper_start.email=TRUE
    #wrapper.event.jvm_prelaunch.email=TRUE
    #wrapper.event.jvm_start.email=TRUE
    #wrapper.event.jvm_started.email=TRUE
    #wrapper.event.jvm_deadlock.email=TRUE
    #wrapper.event.jvm_stop.email=TRUE
    #wrapper.event.jvm_stopped.email=TRUE
    #wrapper.event.jvm_restart.email=TRUE
    #wrapper.event.jvm_failed_invocation.email=TRUE
    #wrapper.event.jvm_max_failed_invocations.email=TRUE
    #wrapper.event.jvm_kill.email=TRUE
    #wrapper.event.jvm_killed.email=TRUE
    #wrapper.event.jvm_unexpected_exit.email=TRUE
    #wrapper.event.wrapper_stop.email=TRUE

    # Specify custom mail content
    wrapper.event.jvm_restart.email.body=The JVM was restarted.\n\nPlease check on its status.\n

    #Kerberos settings
    #wrapper.java.additional.601=-Djava.security.krb5.conf="%SERVER_HOME%/config/krb5.conf"
    #wrapper.java.additional.601.stripquotes=TRUE
    wrapper.java.additional.602=-Dsun.security.krb5.debug=false
    wrapper.java.additional.603=-Djavax.security.auth.useSubjectCredsOnly=false

    # Http client settings for Axis webservice connector
    wrapper.java.additional.701=-Daxisclient.DefaultMaxConnectionsPerHost=10
    wrapper.java.additional.702=-Daxisclient.MaxTotalConnections=100
    set.JAVA_HOME=/data/softwareag/mws/jvm/jvm
