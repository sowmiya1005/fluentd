apiVersion:  apps/v1
kind: Deployment
metadata:
  name: fluentd
  namespace: idbi-efk
  labels:
    k8s-app: fluentd-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  selector:
   matchLabels:
     k8s-app: fluentd-logging
     version: v1
     kubernetes.io/cluster-service: "true"
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
        kubernetes.io/cluster-service: "true"
      annotations:
        scheduler.alpha.kubernetes.io/tolerations: |
          [{"key": "dedicated", "value": "master", "effect": "NoSchedule" }]
    spec:
      serviceAccountName: fluentd-service-account
      affinity:
        # Pods will be placed in the worker node that has the label es-node=internaldatastore
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: efk-node
                operator: In
                values:
                  - efk

      # Toleration condition for Pods when the node is tainted and the subsequent effect
      tolerations:
      - key: "node-role.kubernetes.io/efk_elasticsearch"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: fluentd
        image: 10.143.140.124:5010/fluentd-kubernetes-daemonset
        env:
          - name:  FLUENT_ELASTICSEARCH_HOST
            value: "idbi-efk-es-svc-h.idbi-efk.svc.cluster.local"
          - name:  FLUENT_ELASTICSEARCH_PORT
            value: "9200"
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        #- name: varlibdockercontainers
         # mountPath: /var/lib/docker/containers
          #readOnly: true
        - name: fluentdconf
          mountPath: /fluentd/etc/fluent.conf
          subPath: fluent.conf
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      #- name: varlibdockercontainers
       # hostPath:
        #  path: /var/lib/docker/containers
      - name: fluentdconf
        configMap:
          name: fluentd-configmap

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-configmap
  namespace: idbi-efk
data:
  fluent.conf: |-
    @include kubernetes.conf
    <match **>
       type elasticsearch
       log_level info
       include_tag_key true
       host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
       port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
       logstash_format true
       buffer_chunk_limit 2M
       buffer_queue_limit 32
       flush_interval 5s
       max_retry_wait 30
       disable_retry_limit
       num_threads 8
       ### AWS ElasticSearch needs this set to false.  See
       ### https://discuss.elastic.co/t/elasitcsearch-ruby-raises-cannot-get-new-connection-from-pool-error/36252/10
       reload_connections false
    </match>
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluentd-service-account
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluentd-service-account
subjects:
- kind: ServiceAccount
  name: fluentd-service-account
  namespace: idbi-efk

---
kind: ClusterRole
apiVersion:  rbac.authorization.k8s.io/v1
metadata:
  name: fluentd-service-account
  namespace: idbi-efk
rules:
  - apiGroups: ["*"]
    resources:
      - pods
      - namespaces
    verbs:
      - get
      - watch
      - list

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd-service-account
  namespace: idbi-efk

