apiVersion: apps/v1
kind: StatefulSet
metadata: 
  name: idbi-apim-tsa-cluster
  annotations:
    # Having this annotation so that headless service always registers the IP address irrespective of probe status.
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: nsp-idbi-apim-uat
spec:
  serviceName: idbi-apim-tsa-svc-h
  replicas: 2
  selector:
    matchLabels:
      app: idbi-apim-tsa-cluster
  template:
    metadata:
      labels:
        app: idbi-apim-tsa-cluster
    spec:
      terminationGracePeriodSeconds: 10
      affinity:
         # Pods will be placed in the worker node that has the label terracotta-node=terracotta
        nodeAffinity:
         requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: terracotta-node-uat
              operator: In
              values:
                - terracotta
        # Pods will label app=idbi-apim-tsa-cluster will not be placed together
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                    - idbi-apim-tsa-cluster
              topologyKey: kubernetes.io/hostname

      # # Toleration condition for Pods when the node is tainted and the subsequent effect
      tolerations:
      - key: "node-role.kubernetes.io/terracotta-uat"
        operator: "Exists"
        effect: "NoSchedule"

      containers:
        - name: idbi-apim-tsa-server
          image: 10.143.140.124:5010/apim-sag-tsa:v1.2
          resources:
            limits:
              cpu: "1.5"
              memory: "6Gi" 
            requests:
              cpu: "0.25"
              memory: "4Gi"
 #         imagePullPolicy: Always
          readinessProbe:
            exec:
              # Handling 400 status as well as in case of PASSIVE(terracotta-0) and ACTIVE(terracotta-1) startup scenario there is a deadlock.
              command: ["sh", "-c", "status_code=$(curl -o /dev/null --silent --write-out '%{http_code}\n' http://localhost:9540/tc-management-api/agents); if [ $status_code -eq \"200\" ] || [ $status_code -eq \"400\" ]; then exit 0; fi; exit 1"]
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 5
            # 10,000 as failure threshold gives around 41 hours of time to load from FRS and start terracotta successfully.
            failureThreshold: 10000
          livenessProbe:
            exec:
              # Handling 400 status as well as in case of PASSIVE(terracotta-0) and ACTIVE(terracotta-1) startup scenario there is a deadlock.
              command: ["sh", "-c", "status_code=$(curl -o /dev/null --silent --write-out '%{http_code}\n' http://localhost:9540/tc-management-api/agents); if [ $status_code -eq \"200\" ] || [ $status_code -eq \"400\" ]; then exit 0; fi; exit 1"]
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 5
            # 10,000 as failure threshold gives around 41 hours of time to load from FRS and start terracotta successfully.
            failureThreshold: 10000
          ports:
            - containerPort: 9510
              name: server
            - containerPort: 9530
              name: replication
            - containerPort: 9540
              name: management
          volumeMounts:
            - name: diskstore
              mountPath: /data/diskstore
            - name: backup
              mountPath: /data/backup
            - name: config-volume
              mountPath: /config/tc-config.xml
              subPath: tc-config.xml
            - name: custom-wrapper-conf-volume
              mountPath: /opt/softwareag/Terracotta/server/wrapper/conf/custom_wrapper.conf
              subPath: custom_wrapper.conf
            - name: license-volume
              mountPath: /license/license.key
              subPath: license.key
      # Secret created to login to Docker registry        
      # imagePullSecrets:
      # - name: dockerrepocred
      volumes:
        - name: config-volume
          configMap:
            name: idbi-apim-tsa-config
        - name: custom-wrapper-conf-volume
          configMap:
            name: idbi-apim-tsa-config
        - name: license-volume
          configMap:
            name: idbi-apim-tsa-config
  volumeClaimTemplates:
  - metadata:
      name: diskstore
    spec:
      storageClassName: nfs-storage-tsa-uat
      accessModes: 
      - ReadWriteMany
      resources:
        requests:
          storage: 20Gi
  - metadata:
      name: backup
    spec:
      storageClassName: nfs-storage-tsa-uat
      accessModes: 
      - ReadWriteMany
      resources:
        requests:
          storage: 20Gi



